{"version":3,"sources":["Components/Post/Post.module.css","Routes/CreatePost/CreatePost.module.css","Routes/UserHome/UserHome.module.css","Routes/AdminHome/AdminHome.module.css","Components/Comments/Comments.module.css","Routes/Login/Login.module.css","Routes/Bookmarks/Bookmarks.module.css","Components/Notification/Notification.module.css","Routes/GetPost/GetPost.module.css","Components/CommentBar/CommentBar.module.css","Components/Navbar/Navbar.module.css","Components/Footer/Footer.module.css","reportWebVitals.js","Services/Helper.js","Services/Post.services.js","Components/Notification/Notification.jsx","Components/Post/UserPost.jsx","Routes/UserHome/UserHome.jsx","Components/Post/AdminPost.jsx","Routes/AdminHome/AdminHome.jsx","Services/Authorization.service.js","Routes/Error/Error.jsx","Validations/strings.js","Routes/CreatePost/CreatePost.jsx","Components/Comments/Comments.jsx","Components/CommentBar/CommentBar.jsx","Validations/object.js","Routes/GetPost/GetPost.jsx","Components/Navbar/Navbar.jsx","Components/Footer/Footer.jsx","Components/Layout/Layout.jsx","Routes/ProtectedRoute/ProtectedRoute.jsx","Routes/Login/Login.jsx","Routes/Home/Home.jsx","Routes/Bookmarks/Bookmarks.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_BASE_URL","SignIn","username","password","a","URL","request","fetch","response","json","undefined","result","errors","error","data","token","role","getOwned","limit","page","pages","fetchAllPost","fetchOnePost","postId","post","ok","Error","getUserData","localStorage","getItem","toggleLike","message","toggleActive","createComment","comment","createPost","title","description","image","updatePost","verifyToken","console","getOwnedPost","serverResponse","getAllPosts","likePost","getOnePost","postComment","Create","toggleActivePost","updateAdminPost","toggleFavorite","getAllFavoritesPost","favorites","Notification","className","styles","container","UserPost","location","useLocation","navigate","useNavigate","initialLiked","likes","filter","like","length","comments","useState","liked","setLiked","state","favorite","bookmarked","setBookmark","setMessage","likesCount","likeIcon","size","BookMarkIcon","filled","handleLike","_id","handleBookmark","user","img_wrapper","src","alt","action","id","first","onClick","second","replace","last","UserHome","lastPage","setLastPage","setPage","posts","setPosts","isLastPage","isFirstPage","useEffect","getPost","modifiedPost","map","indexOf","post_wrapper","posts_header","buttons","AdminPost","active","visibility","setVisibility","eyeIcon","AdminHome","getPostOwned","login","setItem","logOut","removeItem","isUser","storedUsername","storedRole","identified","includes","navObj","route","options","setTimeout","window","hasMinChars","str","min","CreatePost","max","useParams","notify","setNotify","loadedImage","setLoadedImage","titulo","setTitulo","descripcion","setDescripcion","url","setUrl","titleIsValid","descriptionIsValid","imageIsValid","RegExp","test","isImageUrl","submitHandler","event","preventDefault","post_form","labels","type","onChange","target","value","name","image_container","onError","style","display","onLoad","button","Comments","commentsArray","comment_wrapper","CommentBar","text","setText","commentHandler","comment_bar","objIsEmpty","obj","Object","keys","getPrototypeOf","prototype","GetPost","setPost","fetchedPost","Navbar","main_navbar","to","Footer","footer","Layout","WrappedComponent","children","ProtectedRoute","authorized","from","Login","setUsername","setPassword","isValid","isNotEmpty","handleSubmit","onSubmit","method","form","placeholder","Home","Bookmarks","getFavs","promises","forEach","push","Promise","all","favPost","modifiedPosts","start","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdaf5ad7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1pKnC\",\"img_wrapper\":\"Post_img_wrapper__237N2\",\"action\":\"Post_action__3Rwon\",\"first\":\"Post_first__41T0N\",\"last\":\"Post_last__3nXkf\",\"filled\":\"Post_filled__2fjtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_form\":\"CreatePost_post_form__1cliD\",\"labels\":\"CreatePost_labels__3LgBj\",\"button\":\"CreatePost_button__kZlBV\",\"image_container\":\"CreatePost_image_container__2DRR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"UserHome_post_wrapper__K7_4O\",\"posts_header\":\"UserHome_posts_header__1SEJf\",\"buttons\":\"UserHome_buttons__3EgD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"AdminHome_post_wrapper__6OxwS\",\"posts_header\":\"AdminHome_posts_header__2H_Fw\",\"buttons\":\"AdminHome_buttons__Ie5M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comments_comment__3XUDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3OqQG\",\"button\":\"Login_button__3J-oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"Bookmarks_post_wrapper__3WL9q\",\"start\":\"Bookmarks_start__1MOL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"Notification_empty__vk6FK\",\"container\":\"Notification_container__KtP5Y\",\"move\":\"Notification_move__2A0xN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"GetPost_post_wrapper__3_yZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment_bar\":\"CommentBar_comment_bar__1LVcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_navbar\":\"Navbar_main_navbar__2CCZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__MLAV3\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const API_BASE_URL = 'https://posts-pw2021.herokuapp.com/api/v1';\r\n\r\nexport const SignIn = async (username, password) => {\r\n    const URL = `${API_BASE_URL}/auth/signin`;\r\n    const request = {\r\n        \"method\": \"POST\",\r\n        \"headers\": {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        },\r\n        \"body\": `username=${username}&password=${password}`\r\n    };\r\n\r\n    const response = await fetch(URL, request);\r\n    const result = await response.json();\r\n    if (result.errors !== undefined || result.error !== undefined) {\r\n        throw result.errors[0] || result.error;\r\n    }\r\n    const data = {\r\n        token: result.token,\r\n        role: result.role\r\n    };\r\n    return data;\r\n};\r\n\r\nexport const getOwned = async (token, limit, page) => {\r\n    const URL = `${API_BASE_URL}/post/owned?limit=${limit}&page=${page}`;\r\n    const request = {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    };\r\n    const response = await fetch(URL, request);\r\n    const {\r\n        data,\r\n        pages,\r\n        error\r\n    } = await response.json();\r\n\r\n    if (error !== undefined) {\r\n        throw error;\r\n    }\r\n\r\n    return {\r\n        data,\r\n        pages\r\n    };\r\n};\r\n\r\nexport const fetchAllPost = async (token, limit, page) => {\r\n    const URL = `${API_BASE_URL}/post/all?limit=${limit}&page=${page}`;\r\n    const request = {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await fetch(URL, request);\r\n    const {\r\n        data,\r\n        pages\r\n    } = await response.json();\r\n    return {\r\n        data,\r\n        pages\r\n    };\r\n};\r\n\r\nexport const fetchOnePost = async (token, postId) => {\r\n    const URL = `${API_BASE_URL}/post/one/${postId}`;\r\n    const request = {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await fetch(URL, request);\r\n    const post = await response.json();\r\n    if (response.ok) {\r\n        return post;\r\n    } else {\r\n        throw new Error(\"Post Not Found\");\r\n    }\r\n};\r\n\r\nexport const getUserData = () => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n    const username = localStorage.getItem('username');\r\n\r\n    return {\r\n        token,\r\n        role,\r\n        username\r\n    };\r\n}\r\n\r\nexport const toggleLike = async (token, postId) => {\r\n    const URL = `${API_BASE_URL}/post/like/${postId}`;\r\n    const request = {\r\n        \"method\": \"PATCH\",\r\n        \"headers\": {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await fetch(URL, request);\r\n    const {\r\n        message\r\n    } = await response.json();\r\n\r\n    if (response.ok) {\r\n        return {\r\n            message\r\n        };\r\n    } else {\r\n        throw new Error(\"Post Not Found\");\r\n    }\r\n};\r\n\r\nexport const toggleActive = async (token, postId) => {\r\n    const URL = `${API_BASE_URL}/post/toggle/${postId}`;\r\n    const request = {\r\n        \"method\": \"PATCH\",\r\n        \"headers\": {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n    const response = await fetch(URL, request);\r\n    if (response.ok) {\r\n        return response.json().message;\r\n    } else {\r\n        throw new Error(response.json().error);\r\n    }\r\n};\r\n\r\nexport const createComment = async (token, postId, comment) => {\r\n    const URL = `${API_BASE_URL}/post/comment/${postId}`;\r\n    const request = {\r\n        \"method\": \"PATCH\",\r\n        \"headers\": {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        \"body\": `description=${comment}`\r\n    }\r\n\r\n    const response = await fetch(URL, request);\r\n    const {\r\n        message\r\n    } = await response.json();\r\n\r\n    if (response.ok) {\r\n        return message;\r\n    } else {\r\n        throw new Error(\"Post Not Found.\");\r\n    }\r\n};\r\n\r\n\r\nexport const createPost = async (token, title, description, image) => {\r\n    const URL = `${API_BASE_URL}/post/create`;\r\n    const request = {\r\n        \"method\": \"POST\",\r\n        \"headers\": {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        \"body\": `title=${title}&description=${description}&image=${image}`\r\n    }\r\n\r\n    const response = await fetch(URL, request);\r\n    const {message} = await response.json();\r\n\r\n    if (response.ok) {\r\n        return message;\r\n    } else {\r\n        throw new Error(response.errors[0]);\r\n    }\r\n};\r\n\r\nexport const updatePost = async (token, title, description, image, postId) => {\r\n    const URL = `${API_BASE_URL}/post/update/${postId}`;\r\n    const request = {\r\n        \"method\": \"PUT\",\r\n        \"headers\": {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        \"body\": `title=${title}&description=${description}&image=${image}`\r\n    };\r\n\r\n    const response = await fetch(URL, request);\r\n    const {message, error} = response.json();\r\n    if(response.ok){\r\n        return message;\r\n    }\r\n    else{\r\n        throw new Error(error);\r\n    }\r\n\r\n}\r\n\r\nexport const verifyToken = async (token) => {\r\n    try {\r\n        const URL = `${API_BASE_URL}/auth/whoami`;\r\n        const request = {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await fetch(URL, request);\r\n        if (response.ok) {\r\n            const {\r\n                username,\r\n                role\r\n            } = await response.json();\r\n            return {\r\n                username: username,\r\n                role: role\r\n            };\r\n        } else {\r\n            throw Error(\"El token no ha sido verificado.\");\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {}\r\n    }\r\n}","import {\r\n    createComment,\r\n    fetchAllPost,\r\n    fetchOnePost,\r\n    getOwned,\r\n    toggleLike,\r\n    createPost,\r\n    toggleActive,\r\n    updatePost,\r\n    API_BASE_URL\r\n} from \"./Helper\";\r\n\r\nexport const getOwnedPost = async (token, page) => {\r\n    try {\r\n        const limit = 3 ;\r\n        const serverResponse = await getOwned(token, limit, page);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nexport const getAllPosts = async (token, page) => {\r\n    try {\r\n        const limit = 3;\r\n        const serverResponse = await fetchAllPost(token, limit, page);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const likePost = async (token, postId) => {\r\n    try {\r\n        const serverResponse = await toggleLike(token, postId);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getOnePost = async (token, postId) => {\r\n    try {\r\n        const serverResponse = await fetchOnePost(token, postId);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const postComment = async (token, postId, message) => {\r\n    try {\r\n        const serverResponse = await createComment(token, postId, message);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {};\r\n    }\r\n};\r\n\r\nexport const Create = async (token, title, description, image) => {\r\n    try {\r\n        const serverResponse = await createPost(token, title, description, image);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const toggleActivePost = async (token, postId) => {\r\n    try {\r\n        const serverResponse = await toggleActive(token, postId);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const updateAdminPost = async (token, title, description, image, postId) => {\r\n    try {\r\n        const serverResponse = await updatePost(token, title, description, image, postId);\r\n        return serverResponse;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const toggleFavorite = async (token, postId) => {\r\n    try {\r\n        const URL = `${API_BASE_URL}/post/fav/${postId}`;\r\n        const request = {\r\n            \"method\": \"PATCH\",\r\n            \"headers\": {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await fetch(URL, request);\r\n        if (response.ok) {\r\n            return {\r\n                message: \"Favorito actualizado.\",\r\n                error: false\r\n            };\r\n        } else {\r\n            throw Error(\"Error al cambiar favorito\");\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        return {\r\n            message: error,\r\n            error: true\r\n        };\r\n    }\r\n}\r\n\r\nexport const getAllFavoritesPost = async (token) => {\r\n    try {\r\n        const URL = `${API_BASE_URL}/post/fav`;\r\n        const request = {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        }\r\n        const response = await fetch(URL, request);\r\n        const {favorites} = await response.json();\r\n        return favorites;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}","import styles from './Notification.module.css';\r\n\r\nconst Notification = ({message}) => {\r\n    if(message){\r\n        return <div className = {styles.container}>{message}</div>;\r\n    }\r\n    else{\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\r\nimport { AiFillLike, AiOutlineLike } from 'react-icons/ai';\r\nimport { FaComment } from 'react-icons/fa'\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport styles from './Post.module.css';\r\nimport {BsFillBookmarkPlusFill, BsFillBookmarkCheckFill} from \"react-icons/bs\"\r\nimport { likePost, toggleFavorite } from '../../Services/Post.services';\r\nimport { getUserData } from '../../Services/Helper';\r\nimport Notification from '../../Components/Notification/Notification'\r\n\r\nconst UserPost = ({ data: post }) => {\r\n    const location = useLocation();\r\n    const { token, username } = getUserData();\r\n    const iconSize = 24;\r\n    const navigate = useNavigate();\r\n    const initialLiked = post.likes.filter(like => like.username === username).length !== 0;\r\n    const likes = post.likes?.length;\r\n    const comments = post.comments.length;\r\n    const [liked, setLiked] = useState(initialLiked);\r\n    const [bookmarked, setBookmark] = useState(location?.state?.favorite || post.favorite);\r\n    const [message, setMessage] = useState('');\r\n    const likesCount = (initialLiked === liked) ? 0 : (liked ? 1 : -1);\r\n    const likeIcon = liked ? <AiFillLike size={iconSize} /> : <AiOutlineLike size={iconSize} />;\r\n    const BookMarkIcon = bookmarked ? <BsFillBookmarkCheckFill className={styles.filled} size={iconSize}/> : <BsFillBookmarkPlusFill size={iconSize}/>; \r\n    const handleLike = async () => { await likePost(token, post._id); setLiked(!liked) };\r\n    const handleBookmark = async () => {\r\n            \r\n        const {message, error} = await toggleFavorite(token, post._id);\r\n        if(!error){\r\n            setBookmark(!bookmarked);\r\n            post.favorite = bookmarked;\r\n        }\r\n        else{\r\n            setMessage('');\r\n            setMessage(message);\r\n        }\r\n        \r\n    };\r\n    const navigateToPost = () => { navigate(`/post/${post._id}`, { replace: true, state: {favorite: bookmarked} }) };\r\n    return (\r\n        <div className={styles.post}>\r\n            <h2>{post.title}<span> {post.user?.username} </span></h2>\r\n            <p>{post.description}</p>\r\n            {post.image !== undefined &&\r\n                <div className={styles.img_wrapper}>\r\n                    <img src={post.image} alt=\"Post\" />\r\n                </div>}\r\n            <div className={styles.action}>\r\n                <button id={styles.first} onClick={handleLike}>{likeIcon} {likes + likesCount} </button>\r\n                <button id={styles.second} onClick={navigateToPost}><FaComment size={iconSize} /> {comments} </button>\r\n                <button id={styles.last} onClick={handleBookmark}>{BookMarkIcon}</button>\r\n            </div>\r\n            {message!=='' && <Notification message={message}/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserPost;","import { useEffect, useState } from \"react\";\r\nimport { getUserData } from \"../../Services/Helper\";\r\nimport { getAllFavoritesPost, getAllPosts } from \"../../Services/Post.services\";\r\nimport { BsFillBookmarkStarFill as Bookmark } from 'react-icons/bs';\r\nimport { AiFillLeftSquare as Left, AiFillRightSquare as Right } from 'react-icons/ai'\r\nimport styles from './UserHome.module.css';\r\nimport UserPost from \"../../Components/Post/UserPost\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserHome = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const iconSize = 24;\r\n    const [lastPage, setLastPage] = useState(0);\r\n    const { username, token } = getUserData();\r\n    const [page, setPage] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const isLastPage = page === lastPage - 1; // Error de paginacion en API\r\n    const isFirstPage = page === 0;\r\n    const prevPage = () => setPage(page - 1);\r\n    const nextPage = () => setPage(page + 1);\r\n    const ToBookmarks = () => {\r\n        navigate(\"/bookmarks\", { replace: true })\r\n    };\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            const favorites = await getAllFavoritesPost(token);\r\n            const { data, pages } = await getAllPosts(token, page);\r\n            const modifiedPost = data.map((post) => {\r\n                post.favorite = favorites.indexOf(post._id) !== -1;\r\n                return post;\r\n            });\r\n            setPosts(modifiedPost);\r\n            setLastPage(pages);\r\n        };\r\n        getPost();\r\n    }, [token, page]);\r\n    return (\r\n        <section className={styles.post_wrapper}>\r\n            <div className={styles.posts_header}>\r\n                <h1>Bienvenido {username}</h1>\r\n                <div className={styles.buttons}>\r\n                    {!isFirstPage && <button onClick={prevPage}><Left size={iconSize} /></button>}\r\n                    {!isLastPage && <button onClick={nextPage}><Right size={iconSize} /></button>}\r\n                    <button onClick={ToBookmarks}><Bookmark size={iconSize} /></button>\r\n                </div>\r\n            </div>\r\n            {\r\n                posts.map(post => {\r\n                    return (<UserPost data={post} key={post._id} />)\r\n                })\r\n            }\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default UserHome;","import { useState } from 'react';\r\nimport styles from './Post.module.css';\r\nimport {AiFillEye, AiFillEyeInvisible, AiFillEdit} from 'react-icons/ai'\r\nimport { toggleActivePost } from '../../Services/Post.services';\r\nimport { getUserData } from '../../Services/Helper';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst AdminPost = ({ data: post }) => {\r\n    const iconSize  = 24;\r\n    const { token } = getUserData();\r\n    const navigate = useNavigate();\r\n    const [visibility, setVisibility] = useState(post.active);\r\n    const eyeIcon = visibility ? <AiFillEye size={iconSize} /> : <AiFillEyeInvisible size={iconSize} />;\r\n    const handleToggle = () => { toggleActivePost(token, post._id); setVisibility(!visibility); }\r\n    const handleEdit = () => {navigate(`/edit/${post._id}`,{state: {title :post.title, description: post.description, image: post.image}})};\r\n    return (\r\n        <div className={styles.post}>\r\n            <h2>{post.title}<span> {post.user?.username} </span></h2>\r\n            <p>{post.description}</p>\r\n            {post.image !== undefined &&\r\n                <div className={styles.img_wrapper}>\r\n                    <img src={post.image} alt=\"Post \" />\r\n                </div>}\r\n            <div className={styles.action}>\r\n                <button id={styles.first} onClick={handleToggle}>{eyeIcon} {visibility ? \"Visible\" : \"Invisible\"} </button>\r\n                <button id={styles.last} onClick={handleEdit}><AiFillEdit size={iconSize} /> Edit Post </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPost;","import { useEffect, useState } from 'react';\r\nimport {AiFillLeftSquare as Left , AiFillRightSquare as Right, AiFillPlusSquare as Add} from 'react-icons/ai'\r\nimport { useNavigate } from 'react-router';\r\nimport styles from './AdminHome.module.css';\r\nimport { getOwnedPost } from '../../Services/Post.services';\r\nimport { getUserData } from '../../Services/Helper';\r\nimport AdminPost from '../../Components/Post/AdminPost';\r\n\r\nconst AdminHome = () => {\r\n\r\n    const ToAdd = () => {\r\n        navigate(\"/create\", {replace: true})\r\n    };\r\n\r\n    const iconSize = 32;\r\n    const navigate = useNavigate();\r\n    const {token, username} = getUserData();\r\n    const [posts, setPosts] = useState([]);\r\n    const [lastPage, setLastPage] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    const prevPage = () => setPage(page - 1);\r\n    const nextPage = () => setPage(page + 1);\r\n    const isLastPage = page === lastPage - 1; // Error de paginacion en API\r\n    const isFirstPage = page === 0;\r\n\r\n    useEffect(() => {\r\n        const getPostOwned = async () => {\r\n            const response = await getOwnedPost(token, page);\r\n            setLastPage(response.pages);\r\n            setPosts(response.data);\r\n        };\r\n\r\n        getPostOwned();\r\n        \r\n    }, [token,page]);\r\n\r\n    return (\r\n        <section className={styles.post_wrapper}>\r\n            <div className={styles.posts_header}>\r\n                <h1>Post de {username} </h1>\r\n                <div className={styles.buttons}>\r\n                {!isFirstPage && <button onClick={prevPage}><Left size = {iconSize}/></button>}\r\n                {!isLastPage && <button onClick={nextPage}><Right size = {iconSize} /></button>}\r\n                <button onClick={ToAdd}><Add size = {iconSize} /></button>\r\n                </div>\r\n            </div>\r\n            {posts?.map( post => {\r\n                return (\r\n                    <AdminPost data={post} key={post._id}/>\r\n                );\r\n            })}\r\n        </section>\r\n    );\r\n};\r\nexport default AdminHome;\r\n\r\n","import {\r\n    SignIn,\r\n    verifyToken,\r\n    getUserData\r\n} from \"./Helper\";\r\n\r\nexport const login = async (username, password) => {\r\n    try {\r\n        const {\r\n            token,\r\n            role\r\n        } = await SignIn(username, password);\r\n\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('username', username);\r\n        localStorage.setItem('role', role);\r\n\r\n        return true;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const logOut = () => {\r\n    localStorage.removeItem('role');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n};\r\n\r\nexport const isUser = async () => {\r\n    const {\r\n        token,\r\n        username: storedUsername,\r\n        role: storedRole\r\n    } = getUserData();\r\n    \r\n    const {\r\n        username,\r\n        role\r\n    } = await verifyToken(token);\r\n\r\n    const identified = storedUsername && storedRole && storedUsername.includes(username) && storedRole === role;\r\n    \r\n    if(!identified){\r\n\r\n        const navObj = {\r\n            route: '/error',\r\n            options: {\r\n                replace: true,\r\n                state: {\r\n                    error: \"No se pudo verificar la identidad 💀.\",\r\n                    logOut: true\r\n                }\r\n            }\r\n        };\r\n        return {identified, navObj};\r\n    }\r\n    return {identified};\r\n}","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logOut } from \"../../Services/Authorization.service\";\r\n\r\nconst Error = ({error}) => {\r\n    const {state} = useLocation();\r\n    \r\n    useEffect(()=>{\r\n        setTimeout(function() {\r\n            window.location.replace('/');\r\n            if(state.logOut){\r\n                logOut();\r\n            }\r\n        }, 2500);\r\n    }, [state?.logOut]);\r\n    \r\n    const message = state?.error === undefined ? error : state.error;\r\n    return(\r\n        <h1>{message}</h1>\r\n    );\r\n};\r\n\r\nexport default Error;","export const hasMinChars = (str, min) => {\r\n    return str.length >= min;\r\n}\r\n\r\nexport const hasMinMaxChars = (str, min, max) => {\r\n    return str.length >= min && str.length <= max;\r\n}\r\n\r\nexport const isNotEmpty = (str) => {\r\n    return str && str.length !== 0;\r\n}\r\n\r\nexport const isImageUrl = (str) => {\r\n    const imagePattern = new RegExp(\".*\\.(gif|jpe?g|bmp|png)$\");\r\n    return imagePattern.test(str);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport styles from \"./CreatePost.module.css\";\r\nimport Notification from \"../../Components/Notification/Notification\";\r\nimport {Create, updateAdminPost } from '../../Services/Post.services'\r\nimport { getUserData } from \"../../Services/Helper\";\r\nimport {hasMinChars, hasMinMaxChars, isImageUrl} from '../../Validations/strings';\r\n\r\nconst CreatePost = () => {\r\n    const navigate = useNavigate();\r\n    const {state} = useLocation();\r\n    const {token} = getUserData();\r\n    const { postId } = useParams();\r\n    const [notify, setNotify] = useState(true);\r\n    const [loadedImage, setLoadedImage] = useState(false);\r\n    const [titulo, setTitulo] = useState('');\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [url, setUrl] = useState(' ');\r\n    const [message, setMessage] = useState(\"\");\r\n    const errorHandler = (event) => {event.target.style.display = 'none'; setLoadedImage(false)};\r\n    const loadHandler = (event) => {event.target.style.display = 'inline-block'; setLoadedImage(true)};\r\n    \r\n    const titleHandler = (event) => {\r\n        setTitulo(event.target.value);\r\n    };\r\n    const descriptionHandler = (event) => {\r\n        setDescripcion(event.target.value);\r\n    };\r\n\r\n    const urlHandler = (event) => {\r\n        setUrl(event.target.value);\r\n    };\r\n\r\n    const titleIsValid = hasMinMaxChars(titulo, 8, 32);\r\n    const descriptionIsValid = hasMinChars(descripcion, 8);\r\n    const imageIsValid = isImageUrl(url) && loadedImage;\r\n\r\n    const clean = () => {\r\n        setTitulo('');\r\n        setDescripcion('');\r\n        setUrl('');\r\n    }\r\n\r\n    const submitHandler = async (event) =>{\r\n        event.preventDefault();\r\n        setNotify(false);\r\n        \r\n        if(!titleIsValid){\r\n            setMessage(\"El título debe tener entre 8 y 32 caracteres 💻.\");\r\n            return;\r\n        }\r\n        else if(!descriptionIsValid){\r\n            setMessage(\"La descripción debe tener mínimo 8 caracteres 📎.\");\r\n            return;\r\n        }\r\n        else if(!imageIsValid){\r\n            setMessage(\"Debes ingresar la url de una imagen 📸.\");\r\n            return;\r\n        }else{\r\n            if(postId){\r\n                await updateAdminPost(token,titulo,descripcion,url,postId);\r\n            }\r\n            else{\r\n                await Create(token, titulo, descripcion, url);\r\n            }\r\n            navigate('/', {replace:true})\r\n        }\r\n        clean();\r\n\r\n        setMessage(postId? 'Editado con éxito': 'Creado con éxito');\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNotify(true);\r\n        if(postId && state){\r\n            const {title, description, image} = state;\r\n                setTitulo(title);\r\n                setDescripcion(description);\r\n                setUrl(image);\r\n        }\r\n        else if(postId && !state){\r\n            navigate('/error', { replace: true, state: { error: \"Post no existe.\" } });\r\n        }\r\n\r\n    }, [postId,state,navigate, notify]);\r\n\r\n    return (\r\n        <>\r\n            <h1>{postId ? `Editar post ${postId}` : \"Crear nuevo post\"}</h1>\r\n            <form className={styles.post_form}>\r\n                <div className= {styles.labels}>\r\n                    <label>\r\n                        Título\r\n                        <input type=\"text\" onChange={titleHandler} value={titulo} name=\"titulo\" />\r\n                    </label>\r\n                    <label>\r\n                        Descripción\r\n                        <input type=\"text\" onChange={descriptionHandler} value = {descripcion} name=\"descripcion\" />\r\n                    </label>\r\n                    <label>\r\n                        Imagen [URL]\r\n                        <input type=\"text\" onChange={urlHandler} value = {url} name=\"url\" />\r\n                    </label>\r\n                </div>\r\n                <div className={styles.image_container}> <img src={url} alt=\"post preview\" onError={errorHandler} onLoad={loadHandler} /> </div>\r\n                <input type=\"submit\" value={postId? \"Editar post\" : \"Crear post\"} className={styles.button} onClick={submitHandler}/>\r\n                \r\n            </form>\r\n            {notify && <Notification message={message}/>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePost;","import styles from './Comments.module.css'\r\nconst Comments = ({ data: commentsArray }) => {\r\n    return (\r\n        <div className={styles.comment_wrapper}>\r\n            {\r\n                commentsArray.map(comment => {\r\n                    return (\r\n                        <div className={styles.comment} key={comment._id}>\r\n                            <h3>{comment.user.username}</h3>\r\n                            <p>{comment.description}</p>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Comments;","import { useState, useEffect } from \"react\";\r\nimport styles from './CommentBar.module.css'\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport {postComment} from '../../Services/Post.services';\r\nimport { getUserData } from \"../../Services/Helper\";\r\nimport {hasMinChars} from '../../Validations/strings';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst CommentBar = ({id : postId}) => {\r\n    const {token} = getUserData();\r\n    const [text, setText] = useState('');\r\n    const textChangeHandler = (event) => {setText(event.target.value)};\r\n    const [notify, setNotify] = useState(true);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const commentHandler = async (event) => {\r\n        setNotify(false);\r\n        if(hasMinChars(text, 8)){\r\n            await postComment(token,postId, text);\r\n        }\r\n        else{\r\n            setMessage(\"El mensaje debe tener mínimo 8 caracteres. 📨\");\r\n        }\r\n        setText('');\r\n    };\r\n    \r\n    useEffect(() => {\r\n        setNotify(true);\r\n    },[notify]);\r\n\r\n    return (\r\n        <div className={styles.comment_bar}>\r\n            <input type=\"text\" value={text} onChange={textChangeHandler} />\r\n            <button onClick={commentHandler}><IoIosSend size={24} /></button>\r\n            {notify && <Notification message = {message}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentBar;","export const objIsEmpty = (obj) => {\r\n    return  obj \r\n    && Object.keys(obj).length === 0\r\n    && Object.getPrototypeOf(obj) === Object.prototype;\r\n};  ","import UserPost from '../../Components/Post/UserPost'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { getOnePost } from '../../Services/Post.services';\r\nimport { getUserData } from '../../Services/Helper';\r\nimport styles from './GetPost.module.css';\r\nimport Comments from '../../Components/Comments/Comments';\r\nimport CommentBar from '../../Components/CommentBar/CommentBar';\r\nimport { objIsEmpty } from '../../Validations/object';\r\n\r\nconst GetPost = () => {\r\n    const navigate = useNavigate();\r\n    const { postId } = useParams();\r\n    const { token } = getUserData();\r\n    const [post, setPost] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getPost = async () => {\r\n            const fetchedPost = await getOnePost(token, postId);\r\n            if (objIsEmpty(fetchedPost)) {\r\n                navigate('/error', { replace: true, state: { error: \"Post no existe.\" } })\r\n            }\r\n            setPost(fetchedPost);\r\n        };\r\n        getPost();\r\n    },[navigate, postId, token]);\r\n\r\n    if (!objIsEmpty(post)) {\r\n        return (\r\n        <section className={styles.post_wrapper}>\r\n            <UserPost data={post} />\r\n            <Comments data={post.comments} />\r\n            <CommentBar id={postId} />\r\n        </section>\r\n        )\r\n    }\r\n    else{\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default GetPost;","import {HiHome} from 'react-icons/hi'\r\nimport {RiLogoutBoxRFill} from 'react-icons/ri'\r\nimport { Link } from \"react-router-dom\";\r\nimport { logOut } from '../../Services/Authorization.service';\r\n\r\nimport styles from './Navbar.module.css';\r\nconst Navbar = () => {\r\n    const size = 24;\r\n    return (\r\n        <nav className={styles.main_navbar}>\r\n            <ul>\r\n                <Link to = \"/\"> <HiHome size={size} /> </Link>\r\n                <Link to = \"/\" onClick={logOut}><RiLogoutBoxRFill size={size}/></Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import {BsGithub} from 'react-icons/bs';\r\nimport styles from './Footer.module.css';\r\nconst Footer = () => {\r\n    return(\r\n        <footer className={styles.footer}>\r\n            <p>Grupo #47</p>\r\n            <BsGithub size={32}/>\r\n            <p>&copy;2021</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import Navbar from '../Navbar/Navbar';\r\nimport Footer from '../Footer/Footer'\r\nconst Layout = ({children : WrappedComponent}) => {\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        {WrappedComponent}\r\n        <Footer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Layout;","import { useEffect } from \"react\";\r\nimport { Outlet , Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { isUser } from \"../../Services/Authorization.service\";\r\nimport { getUserData } from \"../../Services/Helper\";\r\n\r\nconst ProtectedRoute = ({role}) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const {role : storedRole} = getUserData();\r\n\r\n    useEffect(() =>{\r\n        const authorized = async () => {\r\n            const { identified, navObj } = await isUser();\r\n            if (!identified) {\r\n                navigate(navObj.route, navObj.options);\r\n            }\r\n        };\r\n        authorized();\r\n    })\r\n\r\n    if(storedRole === role){\r\n        return <Outlet/>\r\n    }\r\n    else if(storedRole === undefined){\r\n        return <Navigate to=\"/\" state= {{from : location}}/>\r\n    }\r\n    else{\r\n        return <Navigate to = \"/error\"  state = {{from : location, error: \"Unauthorized page.\"}}/>\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { login } from \"../../Services/Authorization.service\";\r\nimport { getUserData } from \"../../Services/Helper\";\r\nimport { isNotEmpty } from \"../../Validations/strings\";\r\nimport styles from './Login.module.css'\r\nimport Notification from \"../../Components/Notification/Notification\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [notify, setNotify] = useState(true);\r\n    const isValid = (str) => isNotEmpty(str);\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setNotify(false);\r\n        if (isValid(username) && isValid(password)) {\r\n            const success = await login(username, password);\r\n            if (success) {\r\n                const { role } = getUserData();\r\n                if (role === 'admin') {\r\n                    navigate(\"/admin\", { replace: true });\r\n                }\r\n                else if (role === \"user\") {\r\n                    navigate(\"/user\", { replace: true });\r\n                }\r\n            }\r\n            else {\r\n                setMessage(\"Error en login 🔑\");\r\n            }\r\n        }\r\n        else{\r\n            setMessage(\"No dejes campos vacíos ✍\");\r\n        }\r\n\r\n    };\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setNotify(true);\r\n    },[notify]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} method=\"post\" className={styles.form}>\r\n            <label>\r\n                Usuario\r\n                <input type=\"text\" onChange={handleUsernameChange} name=\"username\" placeholder=\"Ingrese username o correo\" value={username} />\r\n            </label>\r\n\r\n            <label>\r\n                Contraseña\r\n                <input type=\"text\" onChange={handlePasswordChange} name=\"password\" placeholder=\"Ingrese contraseña\" value={password} />\r\n            </label>\r\n\r\n            <input type=\"submit\" value=\"Ingresar\" className={styles.button} />\r\n            {notify && <Notification message = {message}/>}\r\n        </form>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Login;\r\n","import { getUserData } from \"../../Services/Helper\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Login from \"../Login/Login\"\r\n\r\nconst Home = () => {\r\n    const {role} = getUserData();\r\n\r\n    if (role === 'admin') {\r\n        return <Navigate to=\"/admin\"/>\r\n    }\r\n    else if(role === 'user'){\r\n        return <Navigate to=\"/user\"/>\r\n    }\r\n    else return <Login/>;\r\n}\r\n\r\nexport default Home;","import { useEffect, useState } from 'react';\r\nimport UserPost from '../../Components/Post/UserPost';\r\nimport { getUserData } from '../../Services/Helper'\r\nimport { getAllFavoritesPost, getOnePost } from '../../Services/Post.services'\r\nimport styles from './Bookmarks.module.css';\r\n\r\nconst Bookmarks = () => {\r\n    const { token } = getUserData();\r\n    const [posts, setPosts] = useState(undefined);\r\n    useEffect(() => {\r\n        const getFavs = async () => {\r\n            const favorites = await getAllFavoritesPost(token);\r\n            const promises = [];\r\n            favorites.forEach((postId) => {\r\n                promises.push(getOnePost(token, postId));\r\n            });\r\n            const favPost = await Promise.all(promises);\r\n            const modifiedPosts = await favPost.map(post => {post.favorite=true; return post;});\r\n            setPosts(modifiedPosts);\r\n        };\r\n\r\n        getFavs();\r\n    }, [token]);\r\n\r\n    if (posts === undefined) {\r\n        return <div className={styles.start}> <p>Cargando favoritos...</p></div>\r\n    }\r\n    else {\r\n        return(\r\n        <div className={styles.post_wrapper}>\r\n        {posts.map((post) => (<UserPost data={post} key={post._id} />))}\r\n        </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Bookmarks;","import UserHome from './Routes/UserHome/UserHome';\nimport AdminHome from './Routes/AdminHome/AdminHome';\nimport Error from './Routes/Error/Error';\nimport CreatePost from './Routes/CreatePost/CreatePost';\nimport GetPost from './Routes/GetPost/GetPost';\nimport Layout from './Components/Layout/Layout';\nimport ProtectedRoute from './Routes/ProtectedRoute/ProtectedRoute';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './Routes/Home/Home';\nimport Bookmarks from './Routes/Bookmarks/Bookmarks';\n\nfunction App() {\n  return (\n    <Routes>\n        <Route path=\"/\" element= {<Home/>} />\n\n        <Route element = {<ProtectedRoute role = 'admin'/>}>\n          <Route path=\"/create\" element = {<Layout> <CreatePost/> </Layout>} />\n          <Route path=\"/edit/:postId\" element = {<Layout> <CreatePost/> </Layout>} />\n          <Route path=\"/admin\" element = {<Layout> <AdminHome/> </Layout>} />\n        </Route>\n        \n        <Route element = {<ProtectedRoute role = 'user'/> }>\n          <Route path=\"/user\" element = {<Layout> <UserHome/> </Layout> } />\n          <Route path=\"/bookmarks\" element = {<Layout> <Bookmarks/> </Layout> } />\n          <Route path=\"/post/:postId\" element = {<Layout> <GetPost/> </Layout>} />\n        </Route>\n        \n        <Route path=\"*\" element = {<Error error = \"La pagina no existe.\"/>} />\n      </Routes>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}